unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Used car", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Damaged", "Not Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Used car", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Used car", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Second car", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Second Owner", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Other Owner", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Not first Owner", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median v
alues of max_mpg
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Not first Owner", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
summary(mydf)
cor(mydf$price, mydf$first_owner)
cor(mydf$first_owner, mydf$price)
used_car_price.lm = (mydf$price ~ mydf$first_owner, data = mydf)
used_car_price.lm = (mydf$price~mydf$first_owner, data = mydf)
used_car_price.lm = lm(mydf$price~mydf$first_owner, data = mydf)
used_car_price.lm
summary(used_car_price.lm)
plot(used_car_price.lm)
# Add code here to load all the required libraries with `library()`.
# Do not include any `install.package()` for any required packages in this rmd file.
library(dplyr)
library(ggplot2)
# Only change the value for SID
# Assign your student id into the variable SID, for example:
SID <- 2329524                  # This is an example, replace 2101234 with your actual ID
SIDoffset <- (SID %% 50) + 1    # Your SID mod 50 + 1
load("car-analysis-data.Rda")
# Now subset the car data set
# Pick every 50th observation starting from your offset
# Put into your data frame named mydf (you can rename it)
mydf <- cars.analysis[seq(from=SIDoffset,to=nrow(cars.analysis),by=50),]
#summarize the data
summary(mydf)
#To calculate number of NA's in the table
colSums(is.na(mydf))
sum(is.na(mydf))
#Further exploration of data for each column
unique(mydf$fuel)
unique(mydf$drivetrain)
#Replacing negative values with median values  of max_mpg
median_max_mpg = median(mydf$max_mpg[mydf$max_mpg > 0], na.rm = TRUE)
mydf$max_mpg[mydf$max_mpg < 0] = median_max_mpg
#Replacing NA's with median values of max_mpg
mydf$max_mpg[is.na(mydf$max_mpg)] = median_max_mpg  #max_mpg NA's replaced
#Replacing NA's with median values of min_mpg
median_min_mpg = median(mydf$min_mpg[mydf$min_mpg > 0], na.rm = TRUE)
mydf$min_mpg[is.na(mydf$min_mpg)] = median_min_mpg
#Dropping NA values for categorical values (enginesize)
median_engine_size = median(mydf$engine_size[mydf$engine_size > 0], na.rm = TRUE)
mydf$engine_size[is.na(mydf$engine_size)] = median_engine_size
#Drop NA values for categorical values (damaged, first_owner)
mydf = mydf %>%
filter(!is.na(mydf$damaged))
mydf = mydf %>%
filter(!is.na(mydf$first_owner))
#Drop "Unknown" values in drivetrain
mydf = mydf %>%
filter(drivetrain != "Unknown")
#Check for spelling errors
mydf[mydf$fuel == "Pertol", "fuel"] = "Petrol"
unique(mydf$fuel)
table(mydf$fuel)
summary(mydf)
ggplot(data = mydf, aes(x = reorder(brand, price), y = price)) + geom_bar(stat = "summary", fun  = "mean", fill = "skyblue") +
labs(title = "Average Price by brand", x = "brands", y = "Average Price") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #To adjust the "brand names"
ggplot(data = mydf, aes(x = reorder(fuel,price), y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "lightgreen") + labs(title = "Average price by fuel", x = "fuel", y = "Average price")
ggplot(data = mydf, aes(x = drivetrain, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "green") + labs(title = "Average price by drivetrain")
mydf$damaged = factor(mydf$damaged, levels = c(0,1), labels = c("Not Damaged", "Damaged"))
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "blue")
mydf$first_owner = factor(mydf$first_owner, levels = c(0,1), labels = c("Not first Owner", "First owner"))
ggplot(data = mydf, aes(x = first_owner, y = price)) + geom_bar(stat = "summary", fun = "mean", fill = "orange")
used_car_price.lm = lm(mydf$price~mydf$first_owner, data = mydf)
used_car_price.lm
summary(used_car_price.lm)
plot(used_car_price.lm)
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_boxplot(stat = "summary", fun = "mean", fill = "blue")
ggplot(data = mydf, aes(x = damaged, y = price)) + geom_boxplot()
ggplot(data = mydf, aes(mydf$price, mydf$mileage)) + geom_point() + labs()
ggplot(data = mydf, aes(mydf$price, mydf$mileage)) + geom_point(stat = "summary", fun = "mean") + labs()
ggplot(data = mydf, aes(mydf$mileage, mydf$price)) + geom_point(stat = "summary", fun = "mean") + labs()
ggplot(data = mydf, aes(mydf$mileage, mydf$price)) + geom_point(stat = "summary", fun = "mean") + geom_line()
